from web3 import Web3
from web3 import eth
infura_url = "https://rinkeby.infura.io/v3/75e2f5d655e24741aa5d9f9dbb1be620"
web3 = Web3(Web3.HTTPProvider(infura_url))
#адресса, балансы, ключи
address_cont = '0x605c452c819d2A29ABb172423F33eff8BB76296F'
abi_cont = [{"inputs":[],"name":"createDatabase","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"idDatabase","type":"uint256"},{"internalType":"string","name":"login","type":"string"},{"internalType":"string","name":"password","type":"string"}],"name":"createUserDatabase","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getDatabase","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getLainDatabase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"idDatabase","type":"uint256"},{"internalType":"uint256","name":"idUser","type":"uint256"}],"name":"getLoginDatabase","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"idDatabase","type":"uint256"},{"internalType":"uint256","name":"idUser","type":"uint256"}],"name":"getPasswordDatabase","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"idUser","type":"uint256"},{"internalType":"uint256","name":"idDatabase","type":"uint256"}],"name":"getUsersDatabase","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]
database_contract= web3.eth.contract(
    address=address_cont,
    abi=abi_cont
)
web3.eth.account = '0x81b20bBa382263E0077E5E5d03c758b57B9617c9'
createDatabase = database_contract.functions.createDatabase().buildTransaction({
    'chainId': 4, # индификатор сети(mainnet, ropster, goerli и так далее) 5 - goerli
    'gas': 3000000, # лимит газа
    'gasPrice' : web3.eth.gasPrice, # конвертация газа в wei(тариф)
    'nonce': web3.eth.getTransactionCount(web3.eth.account), # соль для транзакции
    'value': 10000000000 # какое количество денег мы передаем
})
#pass
closedKey = '2ca67dd2e8ec06ecd078207f3fd198615f1543a88e4f89b6e160e83bd8e21651'
sign_txt = eth.Account.sign_transaction(createDatabase, closedKey)
hash_txn = web3.eth.sendRawTransaction(sign_txt.rawTransaction)
print(hash_txn.hex())
def createUserDatabaseI(idDatabase, login, password): createUserDatabase=database_contract.functions.createUserDatabase().buildTransaction({
    'chainId':4,
    'gas': 3000000, # лимит газа
    'gasPrice' : web3.eth.gasPrice, # конвертация газа в wei(тариф)
    'nonce': web3.eth.getTransactionCount(web3.eth.account), # соль для транзакции
    'value': 10000000000 # какое количество денег мы передаем
})
closedKey = '2ca67dd2e8ec06ecd078207f3fd198615f1543a88e4f89b6e160e83bd8e21651'
#sign_txt = eth.Account.sign_transaction(createUserDatabase, closedKey)
hash_txn = web3.eth.sendRawTransaction(sign_txt.rawTransaction)
print(hash_txn.hex())
def getCount():
  getCount=database_contract.functions.getCount().call({})
